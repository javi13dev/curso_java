Clases básicas Java SE
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
Vistas:

- Scanner
- Math
- String, StringBuilder
- Envoltorio




// Ejercicio loteria

// 6 números aleatorios diferentes del 1 al 49
// orenados de mayor a menor



// 2º

Segundo ejercicio vacaciones: String facturacion="ventas-20800,administracion-17900,informatica-35000,RRHH-10350";
El programa mostrará:

Nombre del departamento que más a facturado
Nombres de todos los departamentos, ordenados de menos a más facturación 



***

Sobre git:

token, 

seleccionar windows, show view, repositories

Cuando queramos preparar el repositorio:
settings: team: share project

Y después en 
seleccionar windows, show view, repositories: stagging 



******************************************

https://github.com/amartinsierra/basicos_javase_2024




******************************************

Diapositiva 15 - envoltorio

Se encapsulan porque hay algunas acciones que sólo se pueden hacer con objetos.

Ej: uso de colecciones.

* Las variables objeto, no contienen el objeto sino la referencia.
Ej, si quiero colecciones de números tienen que ser de objetos, no de enteros primitivos.
pero no usaremos integer para operaciones aritméticas, porque al modificarse generan un 
nuevo objeto y basura del anterior.



******************************************
******************************************
******************************************

		Estructura de un programa:


capa					capa
Presentación			Lógica de negocio

- imprimir y recoger 
datos.
						- funciones
						- acceso a bbdd
						

						
******************************************
******************************************
******************************************
04/04

JUnit, pruebas unitarias

En el proyecto seleccionamos: new>JUnit

Elegimos la versión, y seleccionamos la clase y sus métodos que queremos testear.

Vemos que nos crea la clase para Test con sus anotaciones correspondientes.


** Para importar métodos estáticos de una clase ya predefinida:
EJ: 
import static java.lang.Math.*;
**

Una vez definidas las pruebas, se lanza la prueba. 
Run la clase de Junit

La herramienta Maven, nos permite lanzar las pruebas que tengamos configuradas.



**************************
Ej:

Desarrollar un programa para gestión de ciudades.
Una ciudad se caracteriza por nombre, habitantes y pais.

El programa mostrará el siguiente menú:

1. Nueva ciudad
2. Ciudad más poblada
3. Buscar por pais
4. Salir

1: Se piden los datos de la ciudad y se guardan. (Lo guardamos como mejor queramos)
   No puede haber dos ciudades con el mismo nombre en el mismo pais.
2: Muestra directamente los datos de la ciudad más poblada.
3: Se pide un nombre de pais y se muestra los datos de todas las ciudades de ese pais.


**********************************************

Date.

No son inmutables, puden modificacrse a través de .setTime(milisegundos)
Los demás métodos están deprecados.

LocalDate

Son inmutables.
Los cambios generan nuevos objetos.


