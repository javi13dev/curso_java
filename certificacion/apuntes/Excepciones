

Una excepción es una situación anómala que se puede 
producir durante la ejecución de un programa 

Se producen debido a fallos de programación unas veces, y 
otras son debidas a situaciones que escapan al control del 
programador (error en la introducción de un dato de usuario, 
corrupción de un fichero, etc.) 

Un programa puede recuperarse de una excepción a través de 
una gestión de excepciones.




------------------------------------------ 29/05

Try con recursos.

Se pueden tener try sin catch, siempre que los objetos que usamos no lancen excepciones obligadas de controlar.

Class A {
	public void close() {
		System.out.println("Cerrando");
	}
}


try( A a = new A();){ // Es posible, porque la clase A no lanza ninguna exception que estemos obligados a controlar.
					  //  Y lo que me interesa es crear ese objeto y cerrarlo.
}


-------------------------------------------


class A implements AutoCloseable{
	public void close(){
		System.out.println("cerrando A");
	}
}
class B implements AutoCloseable{
	public void close(){
		System.out.println("cerrando B");
	}
}

try(A a=new A();
	B b=new B()){
	b.close();
} // En este momento se llama al close() de b y a.



A. Error compilación
B. Excepcion
C. Cerrando A cerrando B
D. Cerrando B cerrando A
E. Cerrando B cerrando A cerrando B
*F. Cerrando B cerrando B cerrando A 












